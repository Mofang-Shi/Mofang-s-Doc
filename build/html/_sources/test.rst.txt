############
入门 |a_rst|
############

由于使用 |a_rst| 的情况以撰写文档居多，因此我们以 Sphinx 为入口学习 |a_rst|。
要开始一个 Sphinx 项目，可以使用其提供的命令行工具 :program:`sphinx-quickstart`
来创建一个模板项目。

按照命令行的指引，将在当前文件夹生成以下文件结构::

    build/
    source/
        conf.py
        index.rst
    Makefile

其中， *build* 是 sphinx 的输出目录，其中按照输出格式不同划为多个文件夹，
例如 html 输出将位于 *build/html*，对于每一种输出格式，都会生成 *build/doctree*，
这是 sphinx 用于缓存文档结构的目录。

*source* 目录则是原始 |a_rst| 文档存储的位置，sphinx 将会根据其中的内容生成文档。

*source/conf.py* 是对 sphinx 的配置，以 Python 的形式存储配置。

*source/index.rst* 是整个文档的入口。

*Makefile* 是便于控制此文档编译的脚本，在 Windows 下会生成替代的 *make.bat* 脚本。
你可以使用 `make html` 来一键生成 HTML 输出。*source* 目录和 *build* 目录其实是由 Makefile
决定的，其默认内容如下：

.. code:: makefile

    # Minimal makefile for Sphinx documentation

    # You can set these variables from the command line.
    SPHINXOPTS    =
    SPHINXBUILD   = sphinx-build
    SOURCEDIR     = source
    BUILDDIR      = build

    # Put it first so that "make" without argument is like "make help".
    help:
        @$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

    .PHONY: help Makefile

    # Catch-all target: route all unknown targets to Sphinx using the new
    # "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
    %: Makefile
        @$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

可以看到，输出格式以 `-M <format>` 选项传递给 sphinx-build 程序，*build*, *source* 目录也是它的参数。
你可以在 Makefile 中修改 Makefile 变量 `SOURCEDIR` 和 `BUILDDIR` 来修改这两个目录的路径。

在 *source/index.rst* 中，需要有一个 `toctree` directive 来表达该文档的整体结构。
例如，假设文件结构如下::

    source/
        index.rst
        conf.py
        一篇新文档.rst
        anothor-document.rst

那么，为了将所有文档串联起来，需要在 *source/index.rst* 中编辑：